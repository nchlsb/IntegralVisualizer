{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/helpers.ts","../../src/expression.ts","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', `display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ` +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = `data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>`;\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.24.1' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","export function sumBy(array, getNumber) {\r\n    let sum = 0;\r\n    for (let a of array) {\r\n        sum += getNumber(a);\r\n    }\r\n    return sum;\r\n}\r\nexport function productBy(array, getNumber) {\r\n    let product = 1;\r\n    for (let a of array) {\r\n        product *= getNumber(a);\r\n    }\r\n    return product;\r\n}\r\nexport function orElse(maybe, alternative) {\r\n    return (maybe.kind === 'Just') ? maybe.value : alternative;\r\n}\r\nexport function maxBy(array, getNumber) {\r\n    if (array.length === 0) {\r\n        return { kind: 'Nothing' };\r\n    }\r\n    let max = array[0];\r\n    for (let a of array) {\r\n        max = (getNumber(a) > getNumber(max)) ? a : max;\r\n    }\r\n    return { kind: 'Just', value: max };\r\n}\r\nexport function minBy(array, getNumber) {\r\n    if (array.length === 0) {\r\n        return { kind: 'Nothing' };\r\n    }\r\n    let max = array[0];\r\n    for (let a of array) {\r\n        max = (getNumber(a) < getNumber(max)) ? a : max;\r\n    }\r\n    return { kind: 'Just', value: max };\r\n}\r\nexport function range(n) {\r\n    let retVal = [];\r\n    for (let i = 0; i < n; i++) {\r\n        retVal.push(i);\r\n    }\r\n    return retVal;\r\n}\r\nexport function endSwitch(x) {\r\n    throw Error('Shouldn\\'t get here.');\r\n}\r\n","import { productBy, sumBy, endSwitch } from \"./helpers\";\r\nexport let brett = 'brett';\r\n// Brett's favorite expression\r\n// x^2 + (2x + e^pi)\r\nexport const brettsFavorite = {\r\n    kind: 'Add',\r\n    expressions: [{\r\n            kind: 'Power',\r\n            base: { kind: 'X' },\r\n            exponent: {\r\n                kind: 'Literal',\r\n                value: 2\r\n            }\r\n        }, {\r\n            kind: 'Multiply',\r\n            expressions: [{\r\n                    kind: 'Literal',\r\n                    value: 2\r\n                }, {\r\n                    kind: 'X'\r\n                }]\r\n        }, {\r\n            kind: 'Power',\r\n            base: {\r\n                kind: 'E'\r\n            },\r\n            exponent: {\r\n                kind: 'Pi'\r\n            }\r\n        }]\r\n};\r\n// f(x) = x^2 + (2x + e^pi)\r\n// f(10) = (10)^2 + ((2 * 10) + e^pi)\r\n// f(10) = 143.1407\r\nexport const result = evaluate(brettsFavorite, 10);\r\nfunction evaluate(expression, x) {\r\n    switch (expression.kind) {\r\n        case 'Pi':\r\n            return Math.PI;\r\n        case 'E':\r\n            return Math.E;\r\n        case 'Literal':\r\n            return expression.value;\r\n        case 'X':\r\n            return x;\r\n        case 'Sine':\r\n            return Math.sin(evaluate(expression.argument, x));\r\n        case 'Cosine':\r\n            return Math.cos(evaluate(expression.argument, x));\r\n        case 'Tangent':\r\n            return Math.tan(evaluate(expression.argument, x));\r\n        case 'Add':\r\n            return sumBy(expression.expressions, expression => evaluate(expression, x));\r\n        case 'Subtract':\r\n            return evaluate(expression.left, x) - evaluate(expression.right, x);\r\n        case 'Multiply':\r\n            return productBy(expression.expressions, expression => evaluate(expression, x));\r\n        case 'Divide':\r\n            return evaluate(expression.numerator, x) / evaluate(expression.denominator, x);\r\n        case 'Modular':\r\n            return evaluate(expression.left, x) % evaluate(expression.right, x);\r\n        case 'Negate':\r\n            return -evaluate(expression.argument, x);\r\n        case 'Power':\r\n            return Math.pow(evaluate(expression.base, x), evaluate(expression.exponent, x));\r\n        case 'Log':\r\n            return Math.log(evaluate(expression.argument, x)) / Math.log(evaluate(expression.base, x));\r\n        case 'Radical':\r\n            return Math.pow(evaluate(expression.radicand, x), 1 / evaluate(expression.index, x));\r\n        case 'AbsoulteValue':\r\n            return Math.abs(evaluate(expression.argument, x));\r\n    }\r\n    endSwitch(expression);\r\n}\r\n/*\r\n\r\ndata Maybe = Nothing | Just Int\r\n\r\nsum :: [Int] -> Int\r\nsum [] = 0\r\nsum (x:xs) = x + sum xs\r\n\r\nswitch (list.kind) {\r\n    case NIL:\r\n        return 0\r\n\r\n    case CONS:\r\n        return list.first + sum (list.rest)\r\n}\r\n\r\n*/\r\nexport function toTeX(expression) {\r\n    switch (expression.kind) {\r\n        case \"Add\":\r\n            return `\\\\left(${expression.expressions.map(toTeX).join(\" + \")}\\\\right)`;\r\n        case \"Divide\":\r\n            return `\\\\frac{${toTeX(expression.numerator)}}{${toTeX(expression.denominator)}}`;\r\n        case \"Multiply\":\r\n            return `${expression.expressions.map(toTeX).join('')}`;\r\n        case \"Subtract\":\r\n            return `\\\\left(${toTeX(expression.left)} - ${toTeX(expression.right)}\\\\right)`;\r\n        case \"Sine\":\r\n            return `\\\\sin\\\\left(${toTeX(expression.argument)}\\\\right)`;\r\n        case \"Cosine\":\r\n            return `\\\\cos\\\\left(${toTeX(expression.argument)}\\\\right)`;\r\n        case \"Tangent\":\r\n            return `\\\\tan\\\\left(${toTeX(expression.argument)}\\\\right)`;\r\n        case \"E\":\r\n            return `e`;\r\n        case \"Pi\":\r\n            return `\\\\pi`;\r\n        case \"X\":\r\n            return `x`;\r\n        case \"Log\":\r\n            return `\\\\log_{${toTeX(expression.base)}}\\\\left(${toTeX(expression.argument)}\\\\right)`;\r\n        case \"Negate\":\r\n            return `\\\\left(${toTeX(expression.argument)}\\\\right)`;\r\n        case \"Modular\":\r\n            return `\\\\left(${toTeX(expression.left)} \\\\mod ${toTeX(expression.right)}\\\\right)`;\r\n        case \"Power\":\r\n            return `${toTeX(expression.base)}^{${toTeX(expression.exponent)}}`;\r\n        case \"Radical\":\r\n            return `\\\\sqrt[{${toTeX(expression.index)}}]{${toTeX(expression.radicand)}}`;\r\n        case \"Literal\":\r\n            return `${expression.value}`;\r\n        case \"AbsoulteValue\":\r\n            return `\\\\left|${expression.argument}\\\\right|`;\r\n    }\r\n    endSwitch(expression);\r\n}\r\nexport const tex = toTeX(brettsFavorite);\r\n","<script lang=\"ts\">\r\n\timport { result, tex } from './expression'\r\n\timport type { Maybe } from \"./helpers\";\r\n\timport { endSwitch, maxBy, minBy, orElse, range, sumBy } from \"./helpers\";\r\n\timport { onMount } from 'svelte';\r\n\r\n\ttype Point = {\r\n\t\tx: number\r\n\t\ty: number\r\n\t}\r\n\r\n\ttype Rectangle = {\r\n\t\tlowerLeftCorner: Point,\r\n\t\twidth: number,\r\n\t\theight: number\r\n\t}\r\n\r\n\t// variables of graph \r\n\tconst DEFAULT_BOUND_MAGNITUDE = 10\r\n\r\n\tlet xMaxBound = DEFAULT_BOUND_MAGNITUDE\r\n\tlet xMinBound = -DEFAULT_BOUND_MAGNITUDE\r\n\r\n\tlet yMaxBound: number\r\n\t$: yMaxBound = orElse(maxBy(points.map(point => point.y), y => y), DEFAULT_BOUND_MAGNITUDE) + 1\r\n\r\n\tlet yMinBound: number\r\n\t$: yMinBound = orElse(minBy(points.map(point => point.y), y => y), -DEFAULT_BOUND_MAGNITUDE) - 1\r\n\r\n\tlet integralUpperBound = DEFAULT_BOUND_MAGNITUDE\r\n\tlet integralLowerBound = -DEFAULT_BOUND_MAGNITUDE\r\n\t\r\n\tlet dx: number = 1;\r\n\r\n\tlet f: (x: number) => number\r\n\t$: f = x => Math.sin(x)\r\n\r\n\tlet numberOfPoints: number = 100;\r\n\r\n\t// -10 -> 5\r\n\t// offset => 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15\r\n\t// lowerBound + offset\r\n\t// -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5\r\n\r\n\tlet points: Point[]\r\n\t$: points = [...range(numberOfPoints).map(n => {\r\n\t\tconst x = xMinBound + (n * ((xMaxBound - xMinBound) / numberOfPoints))\r\n\t\treturn {x: x, y: f(x)}\r\n\t}), {x: xMaxBound, y: f(xMaxBound)}];\r\n\r\n\tlet numberRectangles: number;\r\n\t$: numberRectangles = (integralUpperBound - integralLowerBound) / dx;\r\n\r\n\tlet riemannRectangles: Rectangle[]\r\n\t$: riemannRectangles = range(numberRectangles).map(n => {\r\n\t\tconst x = integralLowerBound + (n * (integralUpperBound - integralLowerBound) / numberRectangles);\r\n\t\tconst y = f(x);\r\n\r\n\t\t// SVG can't process negative height \r\n\t\treturn {\r\n\t\t\theight: Math.abs(y),\r\n\t\t\twidth: dx,\r\n\t\t\tlowerLeftCorner: {x: x, y: (y > 0) ? 0 : y}\r\n\t\t};\r\n\t});\r\n\r\n/*\r\n\tTodo list\r\n\t\t1. (X)Change the consts at the bottom \r\n\t\t2. (-)Bounderies should be aligned on the axes or use scroll to zoom\r\n\t\t3. ( )Add automatically-updating LaTeX equations\r\n\t\t4. ( )Desktop and mobile friendliness\r\n\t\t5. ( )Negative areas and colors\r\n\t\t\t  Especially when the lower bound is greater than the upper bound\r\n\t\t6. ( )Add testing\r\n\t\t\t  Property based test: symbolic integration and riemann sum give similar results\r\n\t\t7. ( )Custom user equations\r\n\t\t8. ( )Automatically determine Y upper and lower bounds via min and max f(x) value\r\n\t\t9. ( )Dragging uppwer and lower bounds on graph \r\n\t\t10.( ) Highlight over or under estimations as differnt color \r\n\t\t11.( ) Math shold work out so scale varible is always 1 px\r\n\t\t12.( ) Copy out math as text\r\n*/\r\n\r\ntype IncompleteExpression = {\r\n\tkind: 'Plus'\r\n\tleft: IncompleteExpression\r\n\tright: IncompleteExpression\r\n} | {\r\n\tkind: '1'\r\n} | {\r\n\tkind: 'Active'\r\n} | {\r\n\tkind: 'Inactive'\r\n}\r\n\r\nfunction render(expression: IncompleteExpression): string {\r\n\tswitch (expression.kind) {\r\n\t\tcase 'Plus': return `(${render(expression.left)} + ${render(expression.right)})`\r\n\t\tcase '1': return '1'\r\n\t\tcase 'Active': return '□'\r\n\t\tcase 'Inactive': return '■'\r\n\t} endSwitch(expression)\r\n}\r\n\r\nfunction turnActiveIntoPlus(expression: IncompleteExpression): IncompleteExpression {\r\n\tconsole.log('Calling Jaffa')\r\n\tswitch (expression.kind) {\r\n\t\tcase '1': return {kind: '1'};\r\n\t\tcase 'Inactive': return {kind: 'Inactive'};\r\n\t\tcase 'Active': return {kind: 'Plus', left: {kind: 'Active'}, right: {kind: 'Inactive'}};\r\n\t\tcase 'Plus': return {kind: 'Plus', left: turnActiveIntoPlus(expression.left), right: turnActiveIntoPlus(expression.right)}\r\n\t} endSwitch(expression)\r\n}\r\n\r\nfunction hasActive(expression: IncompleteExpression): boolean {\r\n\tswitch (expression.kind) {\r\n\t\tcase '1': return false;\r\n\t\tcase 'Inactive': return false;\r\n\t\tcase 'Active': return true;\r\n\t\tcase 'Plus': return hasActive(expression.left) || hasActive(expression.right);\r\n\t} endSwitch(expression)\r\n}\r\n\r\nlet expression: IncompleteExpression = {kind: 'Active'}\r\n\r\n</script>\r\n\r\n<main>\r\n\t<p><code>{ render(expression) }</code></p>\r\n\t<button on:click={() => expression = turnActiveIntoPlus(expression)}> Add Plus </button>\r\n\r\n\t<ul>\r\n\t\t<li>\r\n\t\t\tShould be \\[ {tex} \\]\r\n\t\t</li>\r\n\r\n\t\t<li>\r\n\t\t\tShould be 143.1407 : ..... {result}\r\n\t\t</li>\r\n\t\t<li>\r\n\t\t\tRectangle Width {dx}\r\n\t\t\t<input type=\"range\" min=\"0.1\" step=\".1\" max={integralUpperBound - integralLowerBound} bind:value={dx}>\r\n\t\t</li>\r\n\t\t<li>\r\n\t\t\tFunction\r\n\t\t\t<select bind:value={f}>\r\n\t\t\t\t<option default value={x => Math.sin(x)}>Sine</option>\r\n\t\t\t\t<option value={x => (x * x)}>Squared</option>\t\r\n\t\t\t</select>\r\n\t\t</li>\r\n\t\t<li>\r\n\t\t\tThe sum of the rectangles rounded to 1's place is {Math.round(sumBy(riemannRectangles, \r\n\t\t\t\trectangle => rectangle.width * rectangle.height))}\r\n\t\t</li>\r\n\t\t<li>{yMinBound} {yMaxBound}</li>\r\n\t</ul>\r\n\r\n\t<svg class=\"cartesian\" viewBox=\"{xMinBound} {yMinBound} {(xMaxBound - xMinBound)} {(yMaxBound - yMinBound) }\">\r\n\t\t<g>\r\n\t\t\t<!-- x and y axis -->\r\n\t\t\t<line stroke=\"black\" fill=\"none\" x1={xMinBound} y1=\"0\" x2={xMaxBound} y2=\"0\" />\r\n\t\t\t<line stroke=\"black\" fill=\"none\" x1=\"0\" y1={yMinBound} x2=\"0\" y2={yMaxBound} />\r\n\r\n\t\t\t<!-- bounds of intergral -->\r\n\t\t\t<line stroke=\"black\" stroke-dasharray=\"2,2\" fill=\"none\" x1={integralLowerBound} y1={yMinBound} x2={integralLowerBound} y2={yMaxBound} />\r\n\t\t\t<line stroke=\"black\" stroke-dasharray=\"2,2\" fill=\"none\" x1={integralUpperBound} y1={yMinBound} x2={integralUpperBound} y2={yMaxBound} />\r\n\r\n\t\t\t<!-- rectangles -->\r\n\t\t\t{#each riemannRectangles as rectangle}\r\n\t\t\t\t\t<rect\r\n\t\t\t\t\t\tclass=\"riemann-rectangle\"\r\n\t\t\t\t\t\tx={rectangle.lowerLeftCorner.x}\r\n\t\t\t\t\t\ty={rectangle.lowerLeftCorner.y}\r\n\t\t\t\t\t\twidth={rectangle.width}\r\n\t\t\t\t\t\theight={rectangle.height}\r\n\t\t\t\t\t/>\r\n\t\t\t{/each}\r\n\r\n\t\t\t<!-- graph of function -->\r\n\t\t\t<polyline stroke=\"black\" fill=\"none\" points={points.map(point => `${point.x},${point.y}`).join(' ')} />\r\n\r\n\t\t</g>\r\n\t</svg>\r\n\r\n\t<input class=\"bound-range\" type=\"range\" min={xMinBound} max={xMaxBound} step=\".01\" bind:value={integralLowerBound}>\r\n\t<input class=\"bound-range\" type=\"range\" min={xMinBound} max={xMaxBound} step=\".01\" bind:value={integralUpperBound}>\r\n\r\n\t<input type=\"number\" max={xMaxBound - 1} bind:value={xMinBound}>\r\n\t<input type=\"number\" min={xMinBound + 1} bind:value={xMaxBound}>\r\n</main>\r\n\r\n<style>\r\n\tmain {\r\n\t\ttext-align: center;\r\n\t\tpadding: 1em;\r\n\t\tmax-width: 240px;\r\n\t\tmargin: 0 auto;\r\n\t}\r\n\r\n\th1 {\r\n\t\tcolor: #ff3e00;\r\n\t\ttext-transform: uppercase;\r\n\t\tfont-size: 4em;\r\n\t\tfont-weight: 100;\r\n\t}\r\n\r\n\t.riemann-rectangle {\r\n\t\tfill: gray;\r\n\t\tstroke: black;\r\n\t\tstroke-width: 1;\r\n\t}\r\n\r\n\tline, rect, polyline {\r\n\t\tstroke-width: 1px;\r\n\t\tvector-effect: non-scaling-stroke;\r\n\t}\r\n\r\n\t@media (min-width: 640px) {\r\n\t\tmain {\r\n\t\t\tmax-width: none;\r\n\t\t}\r\n\t}\r\n\r\n\t.bound-range {\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\tsvg.cartesian {\r\n\t\tdisplay: flex;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t/* Flip the vertical axis in <g> to emulate cartesian. */\r\n\tsvg.cartesian > g {\r\n\t\twidth: 100%;\r\n\t\ttransform: scaleY(-1);\r\n\t}\r\n\r\n\t/* Re-flip all <text> element descendants to their original side up. */\r\n\tsvg.cartesian > g text {\r\n\t\ttransform: scaleY(-1);\r\n\t}\r\n</style>","import App from './App.svelte';\r\nconst app = new App({\r\n    target: document.body,\r\n    props: {}\r\n});\r\nexport default app;\r\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","to_number","undefined","set_data","wholeText","set_input_value","input","select_option","select","i","length","option","__value","selected","current_component","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","flushing","seen_callbacks","Set","flush","update","$$","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","on_mount","on_destroy","context","Map","callbacks","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","c","intro","block","delete","local","m","new_on_destroy","map","filter","mount_component","sumBy","array","getNumber","sum","orElse","maybe","alternative","kind","range","n","retVal","endSwitch","x","Error","brettsFavorite","expressions","base","exponent","result","evaluate","expression","Math","PI","E","sin","argument","cos","tan","left","right","product","productBy","numerator","denominator","pow","log","radicand","index","abs","tex","toTeX","join","lowerLeftCorner","y","width","height","round","iterations","detaching","d","DEFAULT_BOUND_MAGNITUDE","rectangle","point","yMaxBound","yMinBound","f","points","numberRectangles","riemannRectangles","xMaxBound","xMinBound","integralUpperBound","integralLowerBound","dx","turnActiveIntoPlus","console","max","maxBy","minBy","render","selected_option","querySelector","[object Object]","destroy_component","this","$destroy","type","indexOf","splice","$$props","obj","$$set","keys","body"],"mappings":"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"}